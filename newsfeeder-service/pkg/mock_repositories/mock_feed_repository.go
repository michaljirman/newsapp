// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/michaljirman/newsapp/newsfeeder-service/pkg/repositories (interfaces: FeedRepository)

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "github.com/michaljirman/newsapp/newsfeeder-service/pkg/models"
	reflect "reflect"
)

// MockFeedRepository is a mock of FeedRepository interface
type MockFeedRepository struct {
	ctrl     *gomock.Controller
	recorder *MockFeedRepositoryMockRecorder
}

// MockFeedRepositoryMockRecorder is the mock recorder for MockFeedRepository
type MockFeedRepositoryMockRecorder struct {
	mock *MockFeedRepository
}

// NewMockFeedRepository creates a new mock instance
func NewMockFeedRepository(ctrl *gomock.Controller) *MockFeedRepository {
	mock := &MockFeedRepository{ctrl: ctrl}
	mock.recorder = &MockFeedRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFeedRepository) EXPECT() *MockFeedRepositoryMockRecorder {
	return m.recorder
}

// CreateFeed mocks base method
func (m *MockFeedRepository) CreateFeed(arg0 context.Context, arg1 models.Feed) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFeed", arg0, arg1)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFeed indicates an expected call of CreateFeed
func (mr *MockFeedRepositoryMockRecorder) CreateFeed(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFeed", reflect.TypeOf((*MockFeedRepository)(nil).CreateFeed), arg0, arg1)
}

// GetFeedByID mocks base method
func (m *MockFeedRepository) GetFeedByID(arg0 context.Context, arg1 uint64) (*models.Feed, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFeedByID", arg0, arg1)
	ret0, _ := ret[0].(*models.Feed)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFeedByID indicates an expected call of GetFeedByID
func (mr *MockFeedRepositoryMockRecorder) GetFeedByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFeedByID", reflect.TypeOf((*MockFeedRepository)(nil).GetFeedByID), arg0, arg1)
}

// GetFeeds mocks base method
func (m *MockFeedRepository) GetFeeds(arg0 context.Context, arg1, arg2 string) ([]models.Feed, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFeeds", arg0, arg1, arg2)
	ret0, _ := ret[0].([]models.Feed)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFeeds indicates an expected call of GetFeeds
func (mr *MockFeedRepositoryMockRecorder) GetFeeds(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFeeds", reflect.TypeOf((*MockFeedRepository)(nil).GetFeeds), arg0, arg1, arg2)
}
